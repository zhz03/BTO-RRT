clear all;
%% load settings

for k=1:8
namemap = 'map';
name = [namemap,num2str(k)];
type = '.bmp';
fullname = [name,type];
map=im2bw(imread(fullname)); 

if k == 1 || k== 2 || k== 3
    q_init=[10 10]; % source position in Y, X format
    q_goal=[490 490]; % goal position in Y, X format
elseif k == 5 || k==6
% map5-6
q_init=[245 10 ]; % source position in Y, X format
q_goal=[245 490 ]; % goal position in Y, X format
elseif k == 4
%map4
q_init=[50 170 ]; % source position in Y, X format
q_goal=[430 340 ]; % goal position in Y, X format
else k == 7 || k==8
% map7-8
q_init=[10 490]; % source position in Y, X format
q_goal=[490 10]; % goal position in Y, X format
end


source=q_init % source position in Y, X format
goal=q_goal % goal position in Y, X format

stepsize=20; % size of each step of the RRT
disTh=10; % nodes closer than this threshold are taken as almost the same
maxFailedAttempts = 10000;
display=false; % display of RRT

figure(1)
imshow(map); hold on;
title("Path generated by RRT algorithm core");
plot(q_init(2),q_init(1),'*b','LineWidth',4);
plot(q_goal(2),q_goal(1),'*r', 'LineWidth', 4);
%%%%% parameters end here %%%%%
N = 10;
Time_RRT = zeros(1,N);
Dist_RRT = zeros(1,N);
for i=1:N
    [time,pathLength]= bRRT_core(map,source,goal,stepsize,disTh,maxFailedAttempts,display);
    Time_RRT(i) = time;
    Dist_RRT(i) = pathLength;
    i
end

foldername = 'bRRT_data\';
Tname = 'Time';
RRTname = '_Dist_RRT';
mattype = '.mat';

fullname1 = [[[foldername,name],RRTname],mattype];
fullname2 = [[[foldername,name],Tname],mattype];

save(fullname1,'Dist_RRT'); 
save(fullname2,'Time_RRT');
k
end